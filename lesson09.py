# レッスン９「関数」

'''
「関数」とは、一連の処理に名前を付けてまとめ、
必要なときに呼び出せる仕組み。

・例えると「呼べば同じ作業をしてくれる道具」
・何度でも使える
・入力（引数）を受け取り、結果（戻り値）を返せる
'''

# 関数の型

def greet():            # 関数を定義するときは"def(define[定義する]の略）"を付ける。":"も忘れずに
    name = "鈴木"                      # 処理は必ずインデント（字下げ）する！
    print(name,"さん、こんにちは！")    # もちろん処理は複数行でもOK

greet()                 # 関数を呼び出すときは"関数名"

# 関数名のルールも変数名のルールと同じ！　



# 引数
'''
「引数」とは、関数に渡す入力データのこと。
・関数が処理するための材料
・呼び出すときに指定する
・関数の中で変数のように使える
'''

def geet_name(name):            # "name"が「引数」
    print(f"こんにちは、{name}さん")    # 「f文字列」文字列の先頭に"f"をつけると、文字列内で{}で変数を埋め込むことが出来る。

geet_name("佐藤")           # 呼び出すとき、()カッコ内の"佐藤"を引数として渡す。



# 戻り値
'''
「戻り値」とは、関数が処理した結果として返す値のこと。
・関数の出口から出てくる成果物
・return 文で指定する
・戻り値は変数に入れて使える
'''

def add(a, b):          # "引数"は複数設定できる（カンマ区切り）
    return a + b        # a+b を"戻り値"として返す

result = add(3, 5)      # "戻り値" 8 が 変数"result"に代入される
print(result)           # 8を表示


# 以下のような引数だけの関数（戻り値なし）でも結果は同じに見える
def add(a, b):          
    c = a + b       # 引数どうしを足して変数"c"に代入
    print(c)        

add(3, 5)           # 8を表示

# しかし、"戻り値"にすることによって、関数から返ってきた値を、変数に保存・再利用できる